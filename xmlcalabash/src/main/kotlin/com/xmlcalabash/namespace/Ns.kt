package com.xmlcalabash.namespace

import net.sf.saxon.s9api.QName

object Ns {
    val adaptive = QName("adaptive")
    val acceptMultipart = QName("accept-multipart")
    val accessKey = QName("access-key")
    val algorithm = QName("algorithm")
    val all = QName("all")
    val applyTo = QName("apply-to")
    val ar = QName("ar")
    val args = QName("args")
    val arj = QName("arj")
    val assert = QName("assert")
    val assertValid = QName("assert-valid")
    val asType = QName("as")
    val attribute = QName("attribute")
    val attributeName = QName("attribute-name")
    val attributeValue = QName("attribute-value")
    val attributes = QName("attributes")
    val auth = QName("auth")
    val baseUri = QName("base-uri")
    val brotli = QName("brotli")
    val byteOrderMark = QName("byte-order-mark")
    val bzip2 = QName("bzip2")
    val caseOrder = QName("case-order")
    val charset = QName("charset")
    val code = QName("code")
    val collation = QName("collation")
    val collection = QName("collection")
    val columnNumber = QName("column-number")
    val command = QName("command")
    val comment = QName("comment")
    val compress = QName("compress")
    val contentDisposition = QName("content-disposition")
    val contentType = QName("content-type")
    val contentTypes = QName("content-types")
    val count = QName("count")
    val cpio = QName("cpio")
    val crc = QName("crc")
    val cwd = QName("cwd")
    val date = QName("date")
    val datatype = QName("datatype")
    val dtdValidate = QName("dtd-validate")
    val debug = QName("debug")
    val deepEqual = QName("deep-equal")
    val deflate = QName("deflate")
    val defaultVersion = QName("default-version")
    val deleteOnExit = QName("delete-on-exit")
    val depends = QName("depends")
    val detailed = QName("detailed")
    val documentProperties = QName("document-properties")
    val duplicates = QName("duplicates")
    val duration = QName("duration")
    val encoding = QName("encoding")
    val error = QName("error")
    val errorContentType = QName("error-content-type")
    val excludeFilter = QName("exclude-filter")
    val excludeInlinePrefixes = QName("exclude-inline-prefixes")
    val expandInlineText = QName("inline-expand-text")
    val expandText = QName("expand-text")
    val expires = QName("expires")
    val failIfNotEqual = QName("fail-if-not-equal")
    val failOnError = QName("fail-on-error")
    val failOnTimeout = QName("fail-on-timeout")
    val failureThreshold = QName("failure-threshold")
    val fixupXmlBase = QName("fixup-xml-base")
    val fixupXmlLang = QName("fixup-xml-lang")
    val flags = QName("flags")
    val flattenToDepth = QName("flatten-to-depth")
    val format = QName("format")
    val followRedirect = QName("follow-redirect")
    val from = QName("from")
    val globalContextItem = QName("global-context-item")
    val groupAdjacent = QName("group-adjacent")
    val gzip = QName("gzip")
    val headers = QName("headers")
    val hidden = QName("hidden")
    val href = QName("href")
    val httpVersion = QName("http-version")
    val htmlVersion = QName("html-version")
    val id = QName("id")
    val includeFilter = QName("include-filter")
    val indent = QName("indent")
    val initialOnly = QName("initial-only")
    val initialMode = QName("initial-mode")
    val inlineExpandText = QName("inline-expand-text")
    val index = QName("index")
    val jar = QName("jar")
    val json = QName("json")
    val key = QName("key")
    val label = QName("label")
    val lang = QName("lang")
    val lastModified = QName("last-modified")
    val level = QName("level")
    val lineNumber = QName("line-number")
    val limit = QName("limit")
    val location = QName("location")
    val lzma = QName("lzma")
    val match = QName("match")
    val maxDepth = QName("max-depth")
    val md = QName("md")
    val mediaType = QName("media-type")
    val merge = QName("merge")
    val message = QName("message")
    val method = QName("method")
    val mode = QName("mode")
    val name = QName("name")
    val namespace = QName("namespace")
    val newName = QName("new-name")
    val normalizationForm = QName("normalization-form")
    val notation = QName("notation")
    val number = QName("number")
    val omitXmlDeclaration = QName("omit-xml-declaration")
    val order = QName("order")
    val outputBaseUri = QName("output-base-uri")
    val overrideContentEncoding = QName("override-content-encoding")
    val overrideContentType = QName("override-content-type")
    val overrideContentTypes = QName("override-content-types")
    val overwrite = QName("overwrite")
    val parameters = QName("parameters")
    val password = QName("password")
    val path = QName("path")
    val pathSeparator = QName("path-separator")
    val pattern = QName("pattern")
    val permitExpiredSslCertificate = QName("permit-expired-ssl-certificate")
    val permitUntrustedSslCertificate = QName("permit-untrusted-ssl-certificate")
    val pipe = QName("pipe")
    val populateDefaultCollection = QName("populate-default-collection")
    val port = QName("port")
    val position = QName("position")
    val prefix = QName("prefix")
    val prefixes = QName("prefixes")
    val primary = QName("primary")
    val properties = QName("properties")
    val psviRequired = QName("psvi-required")
    val publicIdentifier = QName("public-identifier")
    val readable = QName("readable")
    val recursive = QName("recursive")
    val relative = QName("relative")
    val relativeTo = QName("relative-to")
    val replace = QName("replace")
    val replacement = QName("replacement")
    val reportFormat = QName("report-format")
    val required = QName("required")
    val resultContentType = QName("result-content-type")
    val select = QName("select")
    val sendBodyAnyway = QName("send-body-anyway")
    val separator = QName("separator")
    val sequence = QName("sequence")
    val serialization = QName("serialization")
    val sha = QName("sha")
    val size = QName("size")
    val sortKey = QName("sort-key")
    val stable = QName("stable")
    val static = QName("static")
    val staticParameters = QName("static-parameters")
    val statusOnly = QName("status-only")
    val step = QName("step")
    val stepName = QName("step-name")
    val suffix = QName("suffix")
    val suppressCookies = QName("suppress-cookies")
    val systemIdentifier = QName("system-identifier")
    val tar = QName("tar")
    val target = QName("target")
    val templateName = QName("template-name")
    val test = QName("test")
    val text = QName("text")
    val textLines = QName("text-lines")
    val timeout = QName("timeout")
    val timestamp = QName("timestamp")
    val to = QName("to")
    val transferEncoding = QName("transfer-encoding")
    val type = QName("type")
    val useWhen = QName("use-when")
    val value = QName("value")
    val values = QName("values")
    val version = QName("version")
    val visibility = QName("visibility")
    val wrapper = QName("wrapper")
    val writable = QName("writable")
    val xpathVersion = QName("xpath-version")
    val xz = QName("xz")
    val z = QName("z")
    val zip = QName("zip")
    val valid = QName("valid")
    val sevenZ = QName("sevenZ")
    val trace = QName("trace")
    val timing = QName("timing")
    val verbose = QName("verbose")
    val validationMode = QName("validatation-mode")
    val tryNamespaces = QName("try-namespaces")
    val useLocationHints = QName("use-location-hints")
    val targetNamespace = QName("targetNamespace") // N.B. targetNamespace not target-namespace
}