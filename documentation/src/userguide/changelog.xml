<appendix xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi='http://www.w3.org/2001/XInclude'
          version="5.2" xml:id="changelog">
<info>
  <?db filename="changelog"?>
  <title>Change log</title>
</info>

<para>This section documents the significant changes made in each release.
See the commits and pull requests on
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/">the repository</link> for
finer detail.</para>

<revhistory>
<revision xml:id="r300-beta4">
<revnumber>3.0.0-beta4</revnumber>
<date>2025-05-20</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="515"/>. Allow (API) users to add custom
Saxon configurers with <classname>XmlCalabashBuilder</classname>.
</para></listitem>
<listitem><para>Fixed <ghissue number="513"/>. Reverted
<link linkend="iss-497">the fix</link> that added a warning message about
non-node inputs to <tag>p:xslt</tag>. It was unreliable.
</para></listitem>
<listitem><para>Fixed <ghissue number="509"/>. Added an
<link linkend="run-info">info</link> command that can display information about
the known mimetypes.
</para></listitem>
<listitem><para>Fixed <ghissue number="508"/>. Added
<filename class="extension">.xqm</filename>,
<filename class="extension">.xquery</filename>, and
<filename class="extension">.xql</filename> as standard filename
extensions for <literal>application/xquery</literal> files.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-beta3">
<revnumber>3.0.0-beta3</revnumber>
<date>2025-05-18</date>
<revdescription>
<para>I wasn’t really planning to do another release today, but there are some nice
usability improvements in here and releases are cheap…</para>
<itemizedlist>
<listitem><para>Fixed <ghissue number="504"/>. Improved the error messages reported
when stylesheet compilation fails for a <tag>p:xslt</tag> step.
</para></listitem>
<listitem><para>Fixed <ghissue number="498"/>. Allow the port name to be omitted for
input and output ports on the command line if the pipeline has only a single such port.
</para></listitem>
<listitem><para>Fixed <ghissue number="499"/>. Fixed a bug where the serialization
option on the <tag>p:store</tag> step was not taking precedence.
</para></listitem>
<listitem xml:id="iss-497"><para>Fixed <ghissue number="497"/>. If you attempt to process a stylesheet
without passing an initial template name, and if the input is not a node, it will often
silently fail. Output a debug message warning of this fact.
</para></listitem>
<listitem><para>Fixed <ghissue number="496"/>. Improved the error message associated with
a <tag>p:pipe</tag> as a child of <tag>p:input</tag>.
</para></listitem>
<listitem><para>Fixed <ghissue number="493"/>. Fixed the error location for dynamic
errors in atomic steps. (Previously, the location of the containing compound step
was always reported.)
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-beta2">
<revnumber>3.0.0-beta2</revnumber>
<date>2025-05-17</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="488"/>. Make sure that the document manager
is used as the resource resolver for step processing.
</para></listitem>
<listitem><para>Fixed <ghissue number="485"/>. Make sure that the global context item,
and other properties, are correctly reset when <tag>p:xslt</tag> is used in a loop.
</para></listitem>
<listitem><para>Fixed <ghissue number="483"/>. Support constructing a pipeline
from a <code>java.xml.transform.Source</code>.
</para></listitem>
<listitem><para>Support XML input to the <tag>cx:selenium</tag> step.
Also did some IDE-directed code cleanup in the step itself. There’s a (currently
undocumented) RELAX NG grammar for the XML input. It’s possibly a bit sketchy.
And the step doesn’t validate the input.
</para></listitem>
<listitem><para>Fixed <ghissue number="478"/>. Improved the error message associated
with attempts to connect to an unknown port.
</para></listitem>
<listitem><para>Fixed <ghissue number="476"/>. Make sure that options are set to
their typed values.
</para></listitem>
<listitem><para>Fixed <ghissue number="474"/>. Apply serialization properties specified
in the configuration file.
</para></listitem>
<listitem><para>Fixed <ghissue number="472"/>. Fixed a bug where “null” would sometimes
appear in the graph visualization.
</para></listitem>
<listitem><para>Fixed <ghissue number="321"/> (again). Updated the XInclude processor
to 5.4.0 to correct a bug where nested base URIs were not correctly preserved.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-beta1">
<revnumber>3.0.0-beta1</revnumber>
<date>2025-05-11</date>
<revdescription>
<para>If I’m going to get a couple of betas out in May, I best get started, eh?</para>
<itemizedlist>
<listitem><para>Fixed <ghissue number="466"/>. The <tag>xsl:message</tag>s
from stylesheets run with <tag>p:xslt</tag> are output at “info” level. (They were
accidentally getting discarded in the last few alphas.)
</para></listitem>
<listitem><para>Fixed <ghissue number="462"/>. Make sure that option shortcut values
are stored as untyped atomic values so that they can be promoted to the appropriate
type.
</para></listitem>
<listitem><para>Fixed <ghissue number="460"/>. Refactored build and configuration APIs.
</para></listitem>
<listitem><para>Fixed <ghissue number="456"/>. Removed some debugging code that always printed
a JVM stack trace when <tag>p:run</tag> failed.
</para></listitem>
<listitem><para>Fixed <ghissue number="455"/>. Refactored the <code>DocumentManager</code> API.
</para></listitem>
<listitem><para>Added <tag>cx:jsonpath</tag> and <tag>cx:find</tag> extension steps.
</para></listitem>
<listitem><para>Added <tag>cx:json-diff</tag> and <tag>cx:json-patch</tag> extension
steps.
</para></listitem>
<listitem><para>Made a number of improvements to error reporting.</para>
<orderedlist>
<listitem><para>Improved error messages for documents that can’t be parsed. (Previously,
“file not found” would be reported in some circumstances.)
</para></listitem>
<listitem><para>Improved error message when content type shortcuts are used in
inappropriate places.
</para></listitem>
<listitem><para>Fixed a bug where the underlying cause of an exception sometimes
got lost in nested exceptions. When a pipeline fails, the error report now
includes the chain of causes.
</para></listitem>
<listitem><para>Clarified the error message for the special case of empty sequence
in a type conversion error.
</para></listitem>
<listitem><para>Added a <option>--stacktrace</option>
option to enable stack (step) traces in errors (and disabled them by default).
</para></listitem>
<listitem><para>Improved the formatting of error explanations when
the <option>--explain</option> option is used.
</para></listitem>
</orderedlist>
</listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha33">
<revnumber>3.0.0-alpha33</revnumber>
<date>2025-05-06</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="450"/>. Make sure that options passed on the
command line are promoted as required. (So “true” can be used for an <code>xs:boolean</code> value.)
Also changed the error code used for option values that don’t match (or can’t
be promoted to) the correct type. They now raise <code>err:XD0036</code> instead of
<code>err:XS0077</code> which is really about attribute values not option values.
</para></listitem>
<listitem><para>Fixed <ghissue number="447"/>. Make sure the default verbosity is “info”,
not “warn”. (This error was introduced while tinkering with the logging code; it was probably
never released.)
</para></listitem>
<listitem><para>Fixed <ghissue number="441"/>. Restore loading <code>~/.xmlcalabash3</code>
as the default configuration file if no configuration is given explicitly and if
<code>./.xmlcalabash3</code> doesn’t exist.
(In alpha31 or alpha32, the code to load <code>~/.xmlcalabash3</code> was lost, now it’s back.)
</para></listitem>
<listitem><para>Disabled standard Java logging to <code>stderr</code>. This
seems a bit odd, but XML Calabash has its own error reporter (necessary so that
pipelines and integrators can capture the error messages). That reporter sends
all messages to the standard Java logging system. That’s necessary so that it’s
possible to capture lower level debug messages to a file without sending them
all to the console. But it means that if an error occurs, the reporter prints
the error message and then the underlying Java logging system prints it again,
in a slightly different format. That’s going to be both confusing and annoying,
so by default no Java log messages are printed.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha32">
<revnumber>3.0.0-alpha32</revnumber>
<date>2025-05-05</date>
<revdescription>
<itemizedlist>
<listitem><para>Significant refactoring of message and logging systems.</para>
<para>There’s more separation between things that are logged through the
message reporter and things that are only logged to the underlying Java logger.
The intent is that things only relevant to debugging XML Calabash go only to the
logger. Things that might be relevant to debugging a pipeline go to both places.
</para>
<para>One exception is that details about how the application is configured go
only to the underlying Java logger. This is necessary because we haven’t
configured a message reporter before we’ve configured the application!</para>
<para>The default <link linkend="logback-file">logback.xml configuration</link>
file has been simplified. It no longer uses dynamic configuration. Use a
different configuration file to change the level.
</para>
<para>The error explanation implementation has been changed so that it also uses
the message reporter, rather than writing directly to stderr.</para>
</listitem>
<listitem>
<para>Multithreaded execution complicates the task the visualizer is trying to
perform. The “detail” visualizer has been updated.</para>
</listitem>
<listitem>
<para>Fixed a few bugs in the <tag>cx:wait-for-update</tag> step; it didn’t work reliably
for HTTP URIs.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha31">
<revnumber>3.0.0-alpha31</revnumber>
<date>2025-05-03</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="434"/>. Improved the conformance of
<tag>p:import-functions</tag>. Private functions are now excluded and
nested imports are handled correctly.
</para></listitem>
<listitem><para>Fixed <ghissue number="431"/>. Corrected errors in <tag>p:os-exec</tag>.
Fixed the bug where output to stdout was discarded unless the process ended with
a return code of zero. Serialization properties and output charsets are now handled
correctly.
</para></listitem>
<listitem><para>Fixed <ghissue number="427"/>. Remove carriage returns from <tag>p:os-exec</tag>
output on Windows.
</para></listitem>
<listitem><para>Fixed <ghissue number="425"/>.  The <option>cwd</option> option on
<tag>p:os-exec</tag> is handled correctly if it’s a URI.
</para></listitem>
<listitem><para>Fixed <ghissue number="424"/>. Reworked the <code>DocumentManager</code> API.
</para></listitem>
<listitem><para>Fixed <ghissue number="258"/>. Added support for the language attribute
on the XVRL schema element. 
</para></listitem>
<listitem><para>XML Calabash now uses Saxon 12.6 by default.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha30">
<revnumber>3.0.0-alpha30</revnumber>
<date>2025-04-30</date>
<revdescription>
<itemizedlist>
<listitem>
<para>The Windows-related fixes in <code>3.0.0-alpha29</code> weren’t wholly
satisfactory. Some places where those fixes were incomplete have been
refactored. (I think two issues had been conflated and their union fixed, leaving
each of the individual problems only partially resolved.)
</para>
</listitem>
<listitem><para>Fixed <ghissue number="418"/>. Make sure that attempts to get a path
from a <code>file:</code> URI deal with irregularities on Windows.
</para></listitem>
<listitem><para>Fixed <ghissue number="417"/>. Don’t print “Stack trace:” on errors if
there’s no stack trace.
</para></listitem>
<listitem><para>Refactored the <code>MessageReporter</code> API. 
More information is now available to aid other presentation formats, localization
requirements, etc.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>    
<revision xml:id="r300-alpha29">
<revnumber>3.0.0-alpha29</revnumber>
<date>2025-04-28</date>
<revdescription>
<itemizedlist>
<listitem><para>This release is a handful of small bug fixes, many related to
tidying up loose ends in Windows functionality. Essentially all of the test suite
tests now pass on Windows.
</para></listitem>
<listitem><para>Fixed <ghissue number="413"/>. Don’t put leading slash or, on
Windows, drive letters in ZIP archive names. This change applies across all the
archive formats, for consistency. </para></listitem>
<listitem><para>Fixed <ghissue number="411"/>. Removed the spurious “:” from the start
of <tag class="attribute">message</tag> output on steps.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha28">
<revnumber>3.0.0-alpha28</revnumber>
<date>2025-04-26</date>
<revdescription>
<itemizedlist>
<listitem><para>Made a variety of changes to improve functionality 
on Windows: make sure files get closed, sort out some edge cases with Windows filenames,
corrected a few tests that depended on end-of-line characters, fixed a bug in
<tag>p:file-create-tempfile</tag> (it returned the path instead of a URI).</para>
</listitem>
<listitem><para>Added the ability to run pipeline steps in parallel (“multi threading”).
This required a substantial bit of refactoring. I <emphasis>think</emphasis> it works correctly.
See <link linkend="threading">Running steps in parallel</link>.
</para></listitem>
<listitem><para>Fixed <ghissue number="403"/>. Improved the presentation of error output
to address <link xlink:href="https://lists.w3.org/Archives/Public/xproc-dev/2025Apr/0006.html">a comment</link>
on the mailing list. I’ve also made the error output from the <tag>p:xslt</tag> and
<tag>p:xquery</tag> steps more informative (and generally fixed a few loose ends in
the <tag>p:xquery</tag> step).
</para></listitem>
<listitem><para>Fixed <ghissue number="400"/>. Corrected a typo that prevented
“?” from being correctly escaped in <function>p:urify</function>.
</para></listitem>
<listitem><para>Fixed <ghissue number="393"/>. Static options imported in a common
library (one imported by several other libraries) no longer get flagged as illegal duplicates.
</para></listitem>
<listitem><para>Fixed <ghissue number="390"/>. Somewhere along the line, I broke the
<option>--verbosity</option> option so that it had no effect on the output. Now it does again.
</para></listitem>
<listitem><para>Fixed <ghissue number="384"/>. Added a shortcut for setting map parameters
on the command line.
</para></listitem>
<listitem><para>Fixed <ghissue number="383"/> and made a number of other improvements
in the test driver.
</para></listitem>
<listitem><para>Fixed <ghissue number="362"/> by improving the
<function>p:urify</function> function. This is a little bit speculative
as <link xlink:href="https://github.com/xproc/3.0-specification/issues/1145">xproc/#1145</link>
is still being discussed. But the current behavior is so fundamentally broken
that I’m making a few proactive fixes. These changes also mean that <function>p:urify</function>
is implicitly called in many places which should also help on Windows.</para>
</listitem>
<listitem><para>Fixed <ghissue number="353"/>. Added support for content-types in the
document cache. You can now cache the same document parsed with different content types.
</para></listitem>
<listitem><para>Added some new unit tests to demonstrate programmatic use of XML Calabash
from your own JVM application.
</para></listitem>
<listitem><para>Fixed a bug where it wasn’t possible to set the value of a pipeline option
named “message”. This was an accidental consequence of how the message attribute is handled
on compound steps.
</para></listitem>
<listitem><para>Added a stack trace to the error output. If a step fails, the
default error reporter now prints a “stack trace” showing the step that failed
and the steps it was nested inside. If this turns out to be annoying, I’ll add a
configuration option to turn it off.
</para></listitem>
<listitem><para>Fixed several bugs in the implicit validation feature. Implicit
validation was accidentally enabled by default and there were also some issues
with correct handling of the base URI when the base URI was explicitly absent.
</para></listitem>
<listitem><para>Fixed several, small bugs in the SVG visualizer.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha27">
<revnumber>3.0.0-alpha27</revnumber>
<date>2025-04-14</date>
<revdescription>
<itemizedlist>
<listitem><para>The big (as in “sweeping” and arguably a little riskier than
most recent updates) fix in this release is a substantial refactor of the core
of the application. This was partly done to clean up the API for creating a
processor, and partly because I had outstanding concerns about the previous
big refactor from about a year ago. It’s a mostly not-visible change if you’re just
using the command line application, but there was at least one bug fix where the
document properties of a variable were wrong (the tests passed by accident).
</para></listitem>
<listitem><para>Fixed <ghissue number="378"/>. The SVG output doesn’t display
options on steps that have no binding. They still have a binding to the empty
sequence, but the diagram is a lot less cluttered without them.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha26">
<revnumber>3.0.0-alpha26</revnumber>
<date>2025-03-25</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="372"/>. The graph
visualizer was completely unprepared for connections to option
expressions.
</para></listitem>
<listitem><para>Fixed <ghissue number="370"/> by sending message output to
standard error instead of standard output. This assures that message
output and pipeline output don’t clash. Writing to standard error should
probably have been the default from the beginning. </para></listitem>
<listitem><para>Fixed <ghissue number="365"/>. Documentation
improvements; step names are now links to the appropriate 
reference page.
</para></listitem>
<listitem><para>(Re)fixed <ghissue number="361"/>. Make sure
that the global context item is initialized (so that the custom
stylesheet can define global variables).
</para></listitem>
<listitem><para>Fixed <ghissue number="360"/>.
Attempted to improve the way writing pipeline output to standard output is handled.
Pipeline output to standard output is “undecorated” if only
one port is being output and it cannot produce a sequence.
</para></listitem>
<listitem><para>I made some aesthetic improvements, well, changes
at least, to the SVG graph styling: curved borders, a few colors.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha25">
<revnumber>3.0.0-alpha25</revnumber>
<date>2025-03-23</date>
<revdescription>
<itemizedlist>
<listitem><para>Added <tag>cx:trang</tag> and <tag>cx:trang-files</tag> steps.
</para></listitem>
<listitem><para>Fixed <ghissue number="361"/>. The regular expression used to match
the URI scheme was woefully inadequate.
</para></listitem>
<listitem><para>Fixed <ghissue number="352"/> by supporting an explicit syntax
for specifying the content type of inputs specified on the command line. This is
especially relevant when reading from standard input as the name gives no hints
about the content type.
</para></listitem>
<listitem><para>Fixed <ghissue number="351"/>. This release includes a
substantial revision to SVG diagrams of pipelines and graphs. This has no
user-visible effects unless you’re interested in styling the SVG diagrams.
</para></listitem>
<listitem><para>Fixed <ghissue number="349"/> by documenting the <option>--nogo</option> option.
</para></listitem>
<listitem><para>Fixed <ghissue number="348"/> by documenting the
<option>format</option> option values for <tag>p:archive</tag> and
<tag>p:unarchive</tag>. </para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha24">
<revnumber>3.0.0-alpha24</revnumber>
<date>2025-03-16</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="342"/> by detecting errors in expressions at
run time. Static errors in expressions now generate a warning at compile time and
a failure at runtime. I’m not convinced that’s exactly right, but it does mean that
a static error in an expression that’s never evaluated won’t raise an error.
</para></listitem>
<listitem><para>Fixed <ghissue number="336"/>. The way that SVG diagrams are
generated for pipelines and graphs has been more-or-less completely rewritten.
The XML description of pipelines and graphs are now broadly similar. Almost all
of the styling is performed by XSLT and there’s a mechanism for users to provide
their own stylesheets. The documentation has been updated to (attempt to?) explain
how this works.</para>
</listitem>
<listitem><para>The pages generated by the <option>--graphs</option> option
have been updated to improve the presentation and navigation.
</para></listitem>
<listitem><para>A number of small changes have been made in several places to
try to provide the pipeline description with more information about the steps
and the connections between them. </para></listitem>
<listitem><para>A new <option>--nogo</option> option has been added. This option
compiles the pipeline and generates the graphs, if requested, but does not attempt
to run the pipeline.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha23">
<revnumber>3.0.0-alpha23</revnumber>
<date>2025-03-09</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="350"/> by making the <port>source</port> port
on <tag>cx:sparql</tag> primary. (That was an oversight in the library that declares the step.)
</para></listitem>
<listitem><para>Fixed <ghissue number="327"/> by making sure that
<tag>p:directory-list</tag> paths are normalized against the base URI correctly.
</para></listitem>
<listitem><para>Fixed <ghissue number="325"/> by making sure that secondary (non-primary)
input ports are bound correctly.
A secondary input <emphasis>is not</emphasis> bound to the default readable port if there’s no
explicit connection for it. Instead, it’s bound to the input port’s default
connection.</para></listitem>
<listitem><para>Fixed <ghissue number="323"/> by documenting that using an extension
step requires providing its declaration; added a the library URIs to all of the
extension step reference pages.
</para></listitem>
<listitem><para>Fixed <ghissue number="319"/> by bundling CoffeeSacks with XML
Calabash (this is the Saxon extension function for Invisible XML). The function is
automatically registered.
</para></listitem>
<listitem><para>Added support for user-styling of the SVG pipeline and graph output.
Documentation T.B.D. (See <ghissue number="336"/>.)
</para></listitem>
<listitem><para>Added (somewhat experimental) support for 
<link linkend="implicit-validation">implicit XML Schema validation</link>
of primary inputs.
</para></listitem>
<listitem><para>Updated Apache FOP support;
XML Calabash is now using FOP 2.10. Added image/png, image/tiff, application/X-fop-areatrea,
and application/vnd.hp-PCL as output formats. Allow image/svg+xml as an output
format, but note that it requires a build of FOP with the sandbox enabled.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha22">
<revnumber>3.0.0-alpha22</revnumber>
<date>2025-03-02</date>
<revdescription>
<itemizedlist>
<listitem><para>Added support for the <tag>p:message</tag> step.
</para></listitem>
<listitem><para>Fixed <ghissue number="308"/> by forbidding the
<tag class="attribute">[p:]message</tag> attribute from being specified with
<tag>p:with-option</tag>. (It’s not an option.)
</para></listitem>
<listitem><para>Fixed <ghissue number="306"/> (and <ghissue number="252"/>).
All of the extension steps (except for the polyglot steps) are now bundled into the
distribution.
</para></listitem>
<listitem><para>Fixed <ghissue number="304"/>. Make sure that 
<tag class="attribute">[p:]message</tag> attributes on user-defined steps are
output when the steps are run.
</para></listitem>
<listitem><para>Fixed <ghissue number="302"/> by making IDs explicit so that
GraphViz doesn’t output duplicates in the SVG. Cleaned up the graph output in a
few small ways.
</para></listitem>
<listitem><para>Fixed <ghissue number="301"/>. Added <tag>cx:ebnf-convert</tag>,
a wrapper around Gunther Rademacher’s EBNF converter, and updated
<tag>cx:railroad</tag> to use it directly. This will make it easier to draw railroad
diagrams of, for example, Invisible XML grammars.
</para></listitem>
<listitem><para>Fixed selection of elements with relative <tag
class="attribute">xml:base</tag> attributes so that the resolved base URI is
correct.
</para></listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha21">
<revnumber>3.0.0-alpha21</revnumber>
<date>2025-02-22</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="286"/>.
Added a <tag>cx:markup-blitz</tag> step and made it possible to use either
NineML or Markup Blitz for the <tag>p:invisible-xml</tag> step.
</para></listitem>
<listitem><para>Fixed <ghissue number="285"/>. Make sure that catalog lookup
is performed when XML Schema modules are loaded.
</para></listitem>
<listitem><para>Fixed <ghissue number="281"/>. Remarkably, the <function>p:urify</function>
function didn’t correctly handle “\” in the file path. This may also resolve
<ghissue number="282"/>.
</para></listitem>
<listitem><para>Improved the error message for <code>err:XD0049</code>; it now
includes the URI of the document that caused the error, if the URI is available.
</para></listitem>
<listitem><para>Improved error messages generally by not losing the underlying
exception and printing the underlying cause when an uncaught exception stops
the pipeline. </para></listitem>
<listitem><para>Added an initial implementation of the <tag>cx:asciidoctor</tag>
step. This implements conversion from Asciidoctor to DocBook, HTML, or PDF.</para>
</listitem>
<listitem><para>Added an initial implementation of the <tag>cx:xmlunit</tag>
step. This implements document comparisons with XMLUnit. It doesn’t support
everything that XMLUnit can do, but it supports many of the options.
</para></listitem>
<listitem><para>Added an initial implementation of RDF-related steps:
<tag>cx:rdf-merge</tag>, <tag>cx:rdf-graph</tag>, <tag>cx:rdfa</tag>, and
<tag>cx:sparql</tag>. Added support for a wide range of RDF content types:
<literal>application/ld+json</literal>, 
<literal>application/n-quads</literal>, 
<literal>application/n-triples</literal>, 
<literal>application/rdf+json</literal>, 
<literal>application/rdf+thrift</literal>, 
<literal>application/rdf+xml</literal>, 
<literal>application/sparql-query</literal>, 
<literal>application/sparql-results+json</literal>, 
<literal>application/sparql-results+xml</literal>, 
<literal>application/trig</literal>, 
<literal>text/n3</literal>, and
<literal>text/turtle</literal>. (Supporting these content types means that
the standard <tag>p:document</tag> instruction and the <tag>p:load</tag> and
<tag>p:store</tag> steps support RDF documents natively.)
</para></listitem>
<listitem><para>Added a number of new service provider interfaces so that extension
steps can interact with the processor configuration.
</para></listitem>
<listitem><para>Fixed a typo in the declaration of the
<tag>cx:epubcheck</tag> step.
</para></listitem>
<listitem><para>Cleaned up some whitespace, unused imports, and did some general
code tidying.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>
<revision xml:id="r300-alpha20">
<revnumber>3.0.0-alpha20</revnumber>
<date>2025-02-10</date>
<revdescription>
<para>The 3.0.0-alpha19 release failed because of an error in build automation.
This is functionally the same release.</para>
</revdescription>
</revision>
<revision xml:id="r300-alpha19">
<revnumber>3.0.0-alpha19</revnumber>
<date>2025-02-09</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed <ghissue number="266"/>.
The default encoding on Windows is now
<link xlink:href="https://en.wikipedia.org/wiki/Windows-1252">Windows 1252</link>.
(It was previously documented that way, but not implemented that way.)</para>
</listitem>
<listitem><para>Fixed <ghissue number="265"/>.
The <function>p:urify</function> function can be called with a single argument.</para>
</listitem>
<listitem><para>Fixed <ghissue number="264"/>.
The static base URI was not being set correctly in expressions. Also updated the
error message that arises if an expression fails to include location information.</para>
</listitem>
<listitem><para>Fixed <ghissue number="257"/>.
The <tag>p:validate-with-schematron</tag> step now returns a <tag>xvrl:report</tag>
(not a report<emphasis>s</emphasis>). The bug that caused digest roll-ups to be incorrect
has been fixed.</para>
</listitem>
<listitem><para>Fixed <ghissue number="256"/>.
That sentence in the README now has a verb.</para>
</listitem>
<listitem><para>Fixed <ghissue number="255"/>. The help text has been updated to
reflect current usage. Making the help text comprehensive seemed too verbose; the
common options are summarized with a link to the documentation for more detail.
</para>
</listitem>
<listitem><para>Fixed <ghissue number="253"/>.
Updated the “quick start” section of the README for clarity.</para>
</listitem>
<listitem><para>Fixed <ghissue number="250"/>. Fixed a link accidentally broken
by a global search-and-replace and a few other documentation issues.</para>
</listitem>
<listitem><para>Fixed <ghissue number="236"/>.
The <option>--step</option> option can be used to run any atomic step.</para>
</listitem>

<listitem><para>The error message associated with “not well formed JSON” now
includes the JSON that’s being rejected. Did a bit of nearby tidying of error
messages.</para>
</listitem>
<listitem><para>Updated byte order mark handling in text and JSON documents to
reflect recent specification changes. (Generally, byte order marks are not part
of the text.)</para>
</listitem>
<listitem><para>Tinkered with the GitHub actions: the PR builds now include the
test report; the build environment includes Firefox and Chrome.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha18">
<revnumber>3.0.0-alpha18</revnumber>
<date>2025-02-02</date>
<revdescription>
<itemizedlist>
<listitem><para>Upgraded to version 6.0.12 of the XML Resolver. This isn’t
completely backwards compatible with earlier releases, so attempting to use an
earlier version might not work.</para>
</listitem>
<listitem><para>Fixed <ghissue number="32"/>.
The <function>p:lookup-uri</function> function now queries the catalog
resolver.</para>
</listitem>
<listitem><para>Fixed <ghissue number="163"/>.
Added a <literal linkend="dbg-next">next</literal> command to the debugger.</para>
</listitem>
<listitem><para>Fixed <ghissue number="215"/>.
Make sure that options passed to a subpipeline are reset if the step appears in a loop.
</para>
</listitem>
<listitem><para>Fixed <ghissue number="217"/>.
Correctly handle sequences of documents on the <tag>p:xslt</tag> <port>secondary</port>
output port.</para>
</listitem>
<listitem><para>Fixed <ghissue number="218"/>.
Another XPath parsing bug. 🙁 Something more comprehensive is required.</para>
</listitem>
<listitem><para>Fixed <ghissue number="219"/>.
When a <tag class="attribute">content-type</tag> is specified on
<tag>p:document</tag>, it’s an override.</para>
</listitem>
<listitem><para>Fixed <ghissue number="220"/>.
Improved the error message used to report an unbound variable reference in
an expression.</para>
</listitem>
<listitem><para>Fixed <ghissue number="232"/>.
Resolve the Saxon configuration file URI against the base URI of the
configuration element.</para>
</listitem>
<listitem><para>Updates related to recent specification changes:</para>
  <itemizedlist>
  <listitem><para>Added a <tag>p:encode</tag> step.
  </para></listitem>
  <listitem><para>Adjusted the semantics of <tag>p:cast-content-type</tag> so that
  a <tag>c:data</tag> document is always decoded.
  </para></listitem>
  <listitem><para>Added an <option>attributes</option> option to <tag>p:pack</tag>,
  <tag>p:wrap</tag>, and <tag>p:wrap-sequence</tag>.
  </para></listitem>
  <listitem><para>Improved the semantics of text value templates in XML content.
  It’s now possible to add attributes to elements with a template.
  </para></listitem>
  </itemizedlist>
</listitem>
<listitem><para>Added a <tag>cx:collection-manager</tag> step.</para>
</listitem>
<listitem><para>Added diagramming steps (<tag>cx:ditaa</tag>, <tag>cx:mathml-to-svg</tag>,
and <tag>cx:plantuml</tag>). These are published separately.</para>
</listitem>
<listitem><para>Added a <tag>cx:railroad</tag> step, published separately.</para>
</listitem>
<listitem><para>Improved error messages in serveral places. Improved the documentation
of errors in reference pages.</para>
</listitem>
<listitem><para>Ignore serialization properties when they are explicitly set
to the empty sequence.</para>
</listitem>
<listitem><para>Added support in <tag>p:cast-content-type</tag> for casting to and from
<code>text/x-java-properties</code>.
to the empty sequence.</para>
</listitem>
<listitem><para>Fixed a bug in <tag>p:viewport</tag> where the base URI of documents
in the viewport was incorrect.</para>
</listitem>
<listitem><para>Allow other configuration elements in the configuration file. This provides
a mechanism for steps to have their own configuration.</para>
</listitem>
<listitem><para>Improved the checking for invalid URIs.</para></listitem>
<listitem><para>Fixed a couple of bugs in the pipeline graph output. (Sometimes the
output from a compound step wasn’t correctly connected to its input.)</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha17">
<revnumber>3.0.0-alpha17</revnumber>
<date>2025-01-19</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/189">issue #189</link>.
Generate an XVRL report for NVDL validation.
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/186">issue #186</link>.
Fix links to standard libraries and XProcRef.org in the reference guide.
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/185">issue #185</link>.
Check for required inputs and options before running a pipeline.
When a top-level pipeline is run, check that required options and required
inputs have been provided. (Checking for required inputs here is an opportunity
to improve the error message.)
Keep track of the required state of options until runtime.
Within a pipeline, failing to provide a required option is a static error. But
“top level” pipelines can’t be checked before they run. When they run, it must
be possible to determine which options were declared as required.
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/184">issue #184</link>.
Fix bugs in Schematron XVRL reporting. (Generally,
improve error reporting for validation steps.)
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/160">issue #160</link>.
The code was over-zealous when constructing step configurations. It created a
new Saxon Configuration for every step. That’s not necessary; it’s only
necessary that each <tag>p:library</tag> and <tag>p:declare-step</tag> (and
their descendants) have a new configuration. Configurations are required at that
level because any use of <tag>p:import-functions</tag> has to be isolated.
</para>
</listitem>
<listitem>
<para>Compute a total order over subpipeline steps during graph building.
This change replaces the, in retrospect very strange, approach previously taken
where the steps were effectively unordered and at runtime each was tested to see
if it could be run. Now we work out in advance a total order such that no step
runs before any step that it depends on. (With some special cases to deal with
the when/otherwise clauses in a choose.)</para>
</listitem>
<listitem><para>Fixed bug where buffered messages (accessible through
<tag>p:pipeline-messages</tag>) could be “null” instead of the correct
message.</para>
</listitem>
<listitem><para>Implemented the
<tag xlink:href="https://docs.xmlcalabash.com/reference/current/cx-wait-for-update.html"
>cx:wait-for-update</tag> step.</para>
</listitem>
<listitem><para>Implemented the
<tag xlink:href="https://docs.xmlcalabash.com/reference/current/cx-until.html"
>cx:until</tag> and
<tag xlink:href="https://docs.xmlcalabash.com/reference/current/cx-while.html"
>cx:while</tag> steps.</para>
</listitem>
<listitem>
<para>Added an
“<link xlink:href="https://docs.xmlcalabash.com/userguide/current/errors.html"
>Errors and error messages</link>” chapter to the user guide.
Reworked document resolver APIs; made it possible to publish the
XVRL-to-text stylesheet in the user guide.</para>
</listitem>
<listitem>
<para>Tidy up the pipeline/graph visualization output.
Output option names for options, use the command line <option>--debug</option>
flag to control debugging output. Use <code>«anonymous»</code> instead of the
arbitrary step ID for the root pipeline if it has no declared type.</para>
</listitem>
<listitem><para>Fixed bug in <tag class="attribute">exclude-inline-prefixes</tag> where
it was possible to generate a document that was not namespace well-formed.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha16">
<revnumber>3.0.0-alpha16</revnumber>
<date>2025-01-15</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/175">issue #175</link>.
Make sure directories are created before attempting to write files.
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/174">issue #174</link>.
Improved reporting of user-defined errors.
If a pipeline author aborts a pipeline with <tag>p:error</tag>, make sure that any details
provided are presented when the pipeline fails. (Don’t attempt to use the error
explainer, it won’t know anything about that error.)
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/167">issue #173</link>.
The “detailed” option on <tag>p:directory-list</tag> didn’t work on Windows because
Windows doesn’t support POSIX file permissions. On Windows, the step succeeds but provides
slightly less detail.
</para>
</listitem>
<listitem><para>Reworked how Graphviz visualizations are created and stored. The
<option>--description</option> and <option>--graph</option> options have been replaced
with a single <option>--graphs</option> option. The new option
writes all of the descriptions to an output directory. Instead of one,
potentially huge, SVG diagram of the entire set of pipelines, there are now
distinct graphs for each pipeline with hyperlinks between them.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha15">
<revnumber>3.0.0-alpha15</revnumber>
<date>2025-01-13</date>
<revdescription>
<itemizedlist>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/167">issue #167</link>.
Make sure that the <option linkend="cli-init">--init</option> functions are applied
to every configuration.</para>
</listitem>
<listitem><para>Fixed issues
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/164">#164</link> and
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/165">#165</link>.
Improved XVRL reporting and metadata.
</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/159">issue #159</link>.
Make sure that validity errors are reported in XVRL. Improve reports associated
with RELAX NG validation failures.</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/157">issue #157</link>.
In <tag>p:validate-with-xml-schema</tag>, ignore any errors that arise when
attempting to locate a schema at the namespace URI. (It’s not absolutely certain
that this was the cause of #157, but it’s my best guess.)</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/167">issue #156</link>
and related knock-on issues, including:</para>
<itemizedlist>
<listitem><para>Make sure that steps wait for all of their option binding inputs.
(Previous releases worked accidentally in this regard.)
</para></listitem>
<listitem><para>Make sure the base URI of an expression is always resolved
against the point of definition, not the point of use.
</para></listitem>
<listitem><para>Only apply external option bindings to
<tag>p:option</tag> instructions. (And not also <tag>p:with-option</tag> instructions!)
</para></listitem>
<listitem><para>Make sure steps declared in libraries are always fully
validated. 
</para></listitem>
<listitem><para>Fixed bug where values cast to <type>xs:integer</type> were returned as
<type>xs:decimal</type> values.
</para></listitem>
<listitem><para>Reworked how lazy bindings are managed; they’re now always documents.
</para></listitem>
<listitem><para>General improvements to logging, trace listening, message reporting,
and serialization.
</para></listitem>
</itemizedlist>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/153">issue #153</link>.
Setup the correct namespace context in <tag>p:if</tag>.
A <tag>p:if</tag> is rewritten as a <tag>p:choose</tag> containing a <tag>p:when</tag>; make
sure that the <tag>p:when</tag> constructed for this purpose has the right namespace
context.</para>
</listitem>
<listitem><para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/152">issue #152</link>.
Discard unused inputs on <tag>p:inline</tag> steps.
</para>
</listitem>
<listitem>
<para>When constructing SVG graph output, ignore stylesheet errors rather
than causing the processing to fail. (This hasn’t fixed the errors, but it
makes it possible to ignore them in the short term.)
</para>
</listitem>
<listitem>
<para>Found and fixed (some) issues related to how text value templates are expanded.
(There are still <link xlink:href="https://github.com/xproc/3.0-specification/issues/1131">open
questions</link>.)</para>
</listitem>
<listitem>
<para>Improved handling of <code>err:XD0011</code>. Always provide a reason.</para>
</listitem>
<listitem>
<para>Fix bug where namespace bindings on attributes could be lost</para>
</listitem>
<listitem>
<para>Attempt to manage the console output encoding.</para>
<para>There’s a new configuration file setting,
<code linkend="cc.xml-calabash">console-output-encoding</code>. When
XML Calabash writes to the console, it attempts to assure that the output is
appropriate for that encoding. There’s a bit of a messy interaction between the
new “message printer” class and the existing “message reporter” class. More
refactoring may be useful.</para>
</listitem>
<listitem>
<para>Added “piped mode” to support processing XML in a unix-style pipeline.
</para>
<para>In piped mode (<code linkend="cli-pipe">--pipe</code> or
<code linkend="cc.xml-calabash">piped-io</code>),
primary input comes
from stdin by default and the primary output goes to stdout by default. Explicit
bindings are still possible. The pretty printing associated with console output
is disabled.</para>
</listitem>
<listitem>
<para>Added a (somewhat crude) Powershell script to the distribution to run XML
Calabash on Windows.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha14">
<revnumber>3.0.0-alpha14</revnumber>
<date>2025-01-08</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Reworked Java versions again. This release attempts to move the
requirement back to Java 11, except for the “polyglot” steps which require Java 17
or later.</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/144">issue #144</link>.
The XPath parser is still a little ad hoc. Also improved the error message if this
situation arises again.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/142">issue #142</link>.
The default readable port of a step that followed a <tag>p:try</tag>, that itself
had an implicit output port, was not computed correctly.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/141">issue #141</link>.
Make sure the continuous integration build scripts use the correct documentation paths.
(In order to make relative links between the guides easier to test, I moved the build
directories.)
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/144">issue #140</link>.
Removed the accidental restriction that <tag>p:variable</tag> was
not allowed in <tag>p:try</tag>.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/138">issue #138</link>.
The Windows shell doesn’t support UTF-8 by default (checks calendar, yep, it
<emphasis>is</emphasis> 2025) so back to plain old US ASCII for all messages by
default. 🎵sad trombone🎶
</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha13">
<revnumber>3.0.0-alpha13</revnumber>
<date>2025-01-07</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/134">issue #134</link>.
The last release (perhaps the last couple of releases) have accidentally
required Java 21. This release moves the requirement back to Java 17. Java 17 is
a “long-term-support” release from 2021 so it’s not exactly cutting edge.
Supporting Java 8, the historical favorite, is now deprecated, so it’s time to
move forward. Java 17 seems like a reasonable compromise between 11 (2018) and
21 (2023).</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/131">issue #131</link>.
Clarified documentation of the CSS and XSL formatters teps. Fixed broken links
between the user guide and the reference.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/130">issue #130</link>.
There was a typo in the Relax NG grammar for the configuration file that caused
<tag>cc:mimetype</tag> to appear twice when the second occurrence should have
been <tag>cc:paged-media</tag>
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/125">issue #125</link>.
Corrected the explanation of verbosity in the <option>--help</option> output.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/124">issue #124</link>.
Updated the way the configuration is parsed so that the absence of the
<tag class="attribute">licensed</tag> attribute on the configuration isn’t interpreted as
a request for a “non-licensed” configuration.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/123">issue #123</link>.
Added a namespace declaration to the tableaux for the <tag>cc:xml-calabash</tag> configuration
element.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/122">issue #122</link>.
Added and documented the <option>--explain</option> command line argument.
(Previously, the explanation behavior was tied to the verbosity level which
doesn’t really make sense. I also fixed a bug where the stack trace was printed
twice if debug verbosity was used.)
</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha12">
<revnumber>3.0.0-alpha12</revnumber>
<date>2025-01-05</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Fixed a bug where lazily evaluated expressions might have the wrong
in-scope namespaces.</para>
</listitem>
<listitem>
<para>Fixed a bug where the schema-awareness of expressions and the schema-validity
of documents could get out of sync causing errors.</para>
</listitem>
<listitem>
<para>Fixed a bug where a spurious option was passed to visualizers established
by the configuration file.</para>
</listitem>
<listitem>
<para>Added Graphviz output to the debug log if generating SVG fails.</para>
</listitem>
<listitem>
<para>Allow the debugger breakpoint syntax to begin “break at” as well as “break on”.</para>
</listitem>
<listitem>
<para>Fixed an issue where the debugger was unable to inspect the document properties of
step inputs.</para>
</listitem>
<listitem>
<para>Improved the debugger breakpoint command to check that the specified breakpoint is
possible. The command will now reject attempts to set breakpoints that don’t refer to a valid
step id. The model command has been extended to print all of the possible ids in a pipeline.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha11">
<revnumber>3.0.0-alpha11</revnumber>
<date>2025-01-05</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Tinkered with the timeout and sleep duration options in advance of some
anticipated specification changes. The sleep duration is now a number of seconds,
not milliseconds. Both values can be either a number or a string in the form
of an <type>xs:dayTimeDuration</type>.</para>
</listitem>
<listitem>
<para>Completely refactored the code that parses and serializes documents.
Added support for YAML and TOML content types.</para>
</listitem>
<listitem>
<para>Added <tag>cx:xpath</tag> and <tag>cx:polyglot</tag> steps (<tag>cx:javascript</tag>,
<tag>cx:python</tag>, etc.).</para>
</listitem>
<listitem>
<para>Bumped the Java version to 21, fixed a number of deprecation warnings.</para>
</listitem>
<listitem>
<para>Fixed a bug where <code>[p:]message</code> was <emphasis>still</emphasis> not
being handled correctly.</para>
</listitem>
<listitem>
<para>Added a <tag>cx:epubcheck</tag> step.</para>
</listitem>
<listitem>
<para>Updated assertions to support using an XProc pipeline as an assertion.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha10">
<revnumber>3.0.0-alpha10</revnumber>
<date>2025-01-04</date>
<revdescription>
<itemizedlist>
<listitem>
<para>This release never actually happened. There was a typo in the build script.
I opted to bump the version rather than moving a published tag.
</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha9">
<revnumber>3.0.0-alpha9</revnumber>
<date>2025-01-01</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/92">issue #92</link>.
Updated the <tag>p:archive</tag>, <tag>p:archive-manifest</tag>,
and <tag>p:unarchive</tag> steps to support all of the formats
supported by the Apache Commons Compression library. The “create”
command on <tag>p:archive</tag> also supports merging multiple archives together.
</para>
</listitem>
<listitem>
<para>Added a “visualization” API for tracking pipeline progress.
Extensively revised how <link linkend="logging">logging</link> works.
Removed the now unnecessary “progress” level of verbosity.</para>
<para>By default system logging only goes to the console and uses dynamic
levels. For a different configuration, use a different <link linkend="logback-file">logback.xml
configuration</link> file.</para>
</listitem>
<listitem>
<para>Fixed bugs related to <code>[p:]message</code> attributes.
Messages are now output through the message reporter at “info” level,
rather than being printed directly to the console. Fixed a bug where static
messages on compound steps were not being output at all.
</para>
</listitem>
<listitem>
<para>Completely reworked how XVRL is supported. There’s now an internal model for the
report format. Conversion from SVRL to XVRL is done by constructing the XVRL model.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/90">issue #90</link>
by correcting a typo in the SVG graphing stylesheet.
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/93">issue #93</link>
by removing the accidental restriction that <tag>p:variable</tag> was
not allowed in <tag>p:if</tag>. Hat tip to Achim for reporting that
one!
</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/96">issue #96</link>.
An option that had no default value but whose type did not allow the
empty sequence was generating a compile time error about the invalid
(default) value. The initializer now defers the error until runtime (where it
won’t happen if a value is provided for the option).
</para>
</listitem>
<listitem>
<para>Added <literal>application/epub+zip</literal>,
<literal>application/java-archive</literal>,
<literal>application/x-7z-compressed</literal>,
<literal>application/x-archive</literal>,
<literal>application/x-arj</literal>,
<literal>application/x-cpio</literal>, and
<literal>application/x-tar</literal> to the standard content type mapping.</para>
</listitem>
<listitem>
<para>Added an experimental <command>xmlcalabash.sh</command> script to the distribution.
This should make it easier to run XML Calabash with a modified classpath.
</para>
</listitem>
<listitem>
<para>Renamed a few build properties. The <code>BUILD_HASH</code> is now 
<code>BUILD_ID</code> and is more sensitive to internal builds. Renamed <code>SAXON</code>
to <code>SAXON_EDITION</code> and removed the misleading <code>SAXON_LICENSED</code> property.
(If you run PE or EE without a license, the edition reported is HE.)
</para>
</listitem>
<listitem>
<para>Attempt to detect when PE or EE is running without a license and provide a more
helpful version message.
</para>
</listitem>
<listitem>
<para>Upgraded to SchXslt 1.3.1. Upgrade to jing/trang 20241231. Upgraded a few Kotlin libraries.
Added the brotli and xz libraries to the core build.
</para>
</listitem>
<listitem>
<para>Fixed a bug where the error location information for an error was getting lost.
</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha8">
<revnumber>3.0.0-alpha8</revnumber>
<date>2024-12-28</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Fixed an issue where the command line interface used by the debugger was
always a “dumb” terminal. It now supports history and editing keys.
</para>
</listitem>
<listitem>
<para>Improve the error messages associated with attempting to set inputs or
outputs on the command line for ports that don’t exist in the pipeline.
</para>
</listitem>
<listitem>
<para>An error is now reported if <tag class="attribute">psvi-required</tag> is true but the
processor doesn’t support XML Schema validation. (Saxon EE is required for PSVI support.)
</para>
</listitem>
<listitem>
<para>Renamed the “<literal>schema-aware</literal>” command line option and configuration
property to “<literal>licensed</literal>”. Cleaned up the tests for schema awareness in
several places.
</para>
</listitem>
<listitem>
<para>Added support for the <code>[p:]timeout</code> option on steps.
</para>
</listitem>
<listitem>
<para>Added support for the <literal>timeout</literal> parameter on <tag>p:http-request</tag>.
</para>
</listitem>
<listitem>
<para>Improved the error message associated with an undeclared prefix in an XPath expression.
</para>
</listitem>
<listitem>
<para>Improved the error codes reported for static errors in several places.
</para>
</listitem>
<listitem>
<para>Reworked the <interfacename>MessageReporter</interfacename> interface;
allowed one reporter to chain to another. Added a buffering reporter to keep track
of messages. By default the buffering reporter chains to the default reporter
which chains to the logging reporter. The buffering reporter holds the last 32
messages. The default reporter prints messages to the console if they have a
level that exceeds the verbosity threshold. The logging reporter sends all
messages to the Java logger.</para>
<para>There’s a new <code>message-buffer-size</code>
configuration setting to set the number of messages to buffered.</para>
</listitem>
<listitem>
<para>Added a new <tag>cx:pipeline-messages</tag> extension step that can
retrieve the messages buffered by the buffering reporter.
</para>
</listitem>
<listitem>
<para>Changed the message reporter and document manager to be unique per-pipeline,
rather than shared across multiple pipelines.</para>
</listitem>
<listitem>
<para>Fixed a bug where serialization properties on <tag>p:output</tag> were not
being applied when pipeline outputs were serialized.</para>
</listitem>
<listitem>
<para>Fixed a bug where XML Calabash was failing to detect that <tag>p:import</tag>
must precede <tag>p:input</tag> and <tag>p:output</tag>.
Fixed that error in many of the tests in the extra test suite.</para>
</listitem>
<listitem>
<para>Improved support for Schematron assertions. Assertions are now applied to non-XML
values by first performing “cast content type” on them.
</para>
</listitem>
<listitem>
<para>Added support for a <tag class="attribute">cx:href</tag> attribute on
<tag>p:pipeinfo</tag>. When present, the processor behaves as if the referenced
document appeared where the reference appears. The <tag>p:pipeinfo</tag> must be
empty and the <tag class="attribute">cx:href</tag> must point to a
<tag>p:pipeinfo</tag> document. This makes it practical to share Schematron
assertions across pipelines.
</para>
</listitem>
<listitem>
<para>“<link linkend="upgrading-saxon">Fixed</link>”
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/74">#74</link>
by adding a hack to the manifest classpath.
</para>
</listitem>
<listitem>
<para>Fixed an obscure bug in the debug logging message associated with
<tag>p:sleep</tag>.
</para>
</listitem>
<listitem>
<para>Upgraded from SchXslt1 to SchXslt2 version 1.3.</para>
</listitem>
<listitem>
<para>Cleaned up the error reporter in many steps.
</para>
</listitem>
<listitem>
<para>Removed the defunct <code>debug</code> configuration setting.
</para>
</listitem>
<listitem>
<para>Improve the reference documentation for steps. Defer to the specification and to
Erik Siegal’s <emphasis>excellent</emphasis> <link xlink:href="https://XProcRef.org/">XProcRef</link>
for standard step descriptions.
</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha7">
<revnumber>3.0.0-alpha7</revnumber>
<date>2024-12-24</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Added the <link linkend="assertions">Schematron assertions feature</link>.
</para>
</listitem>
<listitem>
<para>Added a <command linkend="dbg-catch">catch</command> command to the
debugger to catch steps that fail. Added an option to the 
<command linkend="dbg-step">step</command> command to stop after a step executes.
</para>
</listitem>
<listitem>
<para>Fixed <link xlink:href="https://github.com/xproc/3.0-test-suite/pull/783">a bug</link>
in the way steps are handled in nested, common imports.</para>
</listitem>
<listitem>
<para>Fixed <link xlink:href="https://github.com/xproc/3.0-test-suite/pull/781">p:filter</link>
to work as expected rather than as documented. See also,
<link xlink:href="https://github.com/xproc/3.0-steps/pull/645">PR #645</link>, the documentation
fix.</para>
</listitem>
<listitem>
<para>Updated the <link linkend="tracing">trace listener</link> to record when steps fail.</para>
</listitem>
<listitem>
<para>Tinkered with the message listener to align its methods with the
<link linkend="revision-verbosity">recent changes</link> to
<option linkend="cli-verbosity">--verbosity</option>.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha6">
<revnumber>3.0.0-alpha6</revnumber>
<date>2024-12-23</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Added <link xlink:href="debugging.html">an interactive debugger</link>.</para>
</listitem>
<listitem>
<para>Added a <link xlink:href="tracing.html">tracing feature</link>.</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/48">issue #48</link>
by supplying extension attributes to atomic steps.</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/47">issue #47</link>
by documenting the <option linkend="cli-pipeline">pipeline</option> option.</para>
</listitem>
<listitem>
<para>Added support for a
<option linkend="cli-init">--init</option> command line option to support registering
extension functions before running a pipeline.</para>
</listitem>
<listitem>
<para>Refactored the API that provides inputs to atomic steps. The inputs are now
cached by the implementation and made available when the step is run. The previous API didn’t
require that inputs be cached, but the overwhelming majority of steps do. Centralizing
that feature simplifies atomic step implementations and avoids bugs.</para>
</listitem>
<listitem>
<para>Fixed a bug where <tag>p:store</tag> could not store binary outputs.
Generally improved handling of serialized outputs.
Implemented support for the <tag linkend="cc.serialization">cc:serialization</tag>
configuration option.</para>
</listitem>
<listitem>
<para>Refactored the paged media steps. Documented the extensions supported by
<tag xlink:href="https://docs.xmlcalabash.com/reference/current/p-css-formatter.html">p:css-formatter</tag>
and
<tag xlink:href="https://docs.xmlcalabash.com/reference/current/p-xsl-formatter.html">p:xsl-formatter</tag>.
</para>
</listitem>
<listitem>
<para>Documented the <function
xlink:href="https://docs.xmlcalabash.com/reference/current/xproc-functions.html#f.system-property"
>p:system-property</function> function, including the vendor-specific property
names.</para>
</listitem>
<listitem>
<para>Refactored the logging-related configuration. Switched to the
<link xlink:href="https://logback.qos.ch/">Logback</link> backend. Changed the
<option linkend="cli-debug">--debug</option> option so that it enables debug logging.
</para>
</listitem>
<listitem xml:id="revision-verbosity">
<para>Refactored and reorganized the <option linkend="cli-verbosity">--verbosity</option>
values. They now align with debugging log levels.</para>
</listitem>
<listitem>
<para>Refactored how “empty” is handled. Empty inputs are now addressed when the
graph model is built, not during pipeline construction. This simplifies construction
and fixed at least one bug.</para>
</listitem>
<listitem>
<para>Fixed a bug in the way the error explanations file was parsed.</para>
</listitem>
<listitem>
<para>Attempted to make sure that error messages include the location of the error.
Things are improved, though perhaps not fixed everywhere.</para>
</listitem>
<listitem>
<para>Refactored how step and model IDs are managed. The new system produces simpler,
more predictable APIs.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha5">
<revnumber>3.0.0-alpha5</revnumber>
<date>2024-12-15</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Refactored the way context information is maintained both at
compile time and run time. This is a re-refactor of the refactor I
started back in June when I discovered that it must be possible for
the Saxon configuration for each step to be different. The problem I
discovered shortly after releasing <link linkend="r300-alpha4">alpha4</link> was that the runtime context
was still using the compile time environment when evaluating
expressions. Mostly this manifested in the wrong value for the
<literal>p:episode</literal> system property.</para>
<para>It was all a bit of a mess so I threw it out and started over. Again. It’s better now,
I think, but there’s still room for improvement.</para>
</listitem>
<listitem>
<para>Updated the serializer to make sure that XHTML documents are serialized as XML, not HTML.</para>
</listitem>
<listitem>
<para>Added a stub implementation of <function>p:lookup-uri</function>.</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/32">issue #32</link>
by adding a (debug logging) warning if an input or output port
trivially accepts no documents. That is, if it has a content-types
constraint that includes no inclusive members or if
<literal>*/*</literal> is the last exclusive member.</para>
</listitem>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/31">issue #31</link>
by amking some documentation improvements, including documenting the additional
properties accepted by <function>p:system-property</function> in the
<citetitle xlink:href="https://docs.xmlcalabash.com/reference/current/">Reference Guide</citetitle>.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha4">
<revnumber>3.0.0-alpha4</revnumber>
<date>2024-12-07</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Resolved the remaining <tag>p:validate-with-json-schema</tag> test failures. Updated
to <link xlink:href="https://github.com/networknt/json-schema-validator">json-schema-validator</link>
version 1.5.4. This required adding a dependency on GraalVM’s polyglot JavaScript library.
</para>
</listitem>
<listitem>
<para>Updated the build script to use a more recent version of XercesImpl.</para>
</listitem>
<listitem>
<para>Fixed several bugs related to the way static options are resolved.</para>
</listitem>
<listitem>
<para>Fixed a bug where <code>[p:]inline-expand-text</code> was incorrectly controlling
AVTs in attributes on the element where it occurred.</para>
</listitem>
<listitem>
<para>Made many improvements to <tag>p:import-functions</tag> support.</para>
</listitem>
<listitem>
<para>Added <link xlink:href="https://github.com/xproc/3.0-test-suite/pull/774">special
handling</link> for <tag class="attribute">use-when</tag> on <tag>p:import</tag>.</para>
</listitem>
<listitem>
<para>Support variables in <tag class="attribute">match</tag> expressions on
<tag>p:viewport</tag>.</para>
</listitem>
<listitem>
<para>Fixed error codes for several tests. Correctly report static errors in more cases.</para>
</listitem>
<listitem>
<para>Reworked SVG output so that there’s one file for all the pipelines and
one file for all the graphs (instead of multiple files for each).</para>
</listitem>
<listitem>
<para>Added support for the <option>--step</option> option.</para>
</listitem>
<listitem>
<para>Fixed a bug in the attribute value template parser. It failed to handle
nested comments correctly.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha3">
<revnumber>3.0.0-alpha3</revnumber>
<date>2024-12-02</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/9">issue #9</link>,
which reveals that the XPath parser is still a bit too ad hoc.</para>
</listitem>
<listitem>
<para>Fixed a couple of NVDL tests by sorting out the cache for schemas.
Updated the <tag>p:xinclude</tag> step so that it looks in the cache.
</para>
</listitem>
<listitem>
<para>Added <tag>cx:cache-add</tag> and <tag>cx:cache-delete</tag> to let pipeline
authors update the cache.</para>
</listitem>
<listitem>
<para>Made a bunch of improvements to static option handling.</para>
</listitem>
<listitem>
<para>Resolved the situation where two steps with the same type (private steps in different
libraries, for example) would not work correctly.</para>
</listitem>
<listitem>
<para>These changes resolved the remaining input, option, with-option, step-available, and
<tag>p:run</tag> tests.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha2">
<revnumber>3.0.0-alpha2</revnumber>
<date>2024-11-26</date>
<revdescription>
<itemizedlist>
<listitem>
<para>Fixed
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/3">issue #3</link>,
<literal>[p:]message</literal> attributes were not supported on steps.
</para>
</listitem>
<listitem>
<para>Attempted to fix
<link xlink:href="https://github.com/xmlcalabash/xmlcalabash3/issues/2">issue #2</link>,
XML Calabash failed on startup on Windows. The problem, correctly identified by Martin,
was in the attempt to create a URI from a path. On Windows, paths contain <literal>\</literal>
and those are forbidden in URIs.</para>
<para>I’ve adopted the solution suggested by Martin, and tested that it passes a “smoke test”
on Windows. But I’m not highly confident that this is the end of the Windows path issues.</para>
</listitem>
<listitem>
<para>Removed “empty steps” from the runtime graph. These are steps that
generate no output, designed to model <tag>p:empty</tag> bindings. They clutter
the graph and I don’t think they’re required any more. An unbound input is now
“welded shut” so that no inputs are expected.</para>
</listitem>
</itemizedlist>
</revdescription>
</revision>

<revision xml:id="r300-alpha1">
<revnumber>3.0.0-alpha1</revnumber>
<date>2024-11-24</date>
<revdescription>
<para>Initial publication.</para>
</revdescription>
</revision>
</revhistory>
</appendix>
