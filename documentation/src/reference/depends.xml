<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:h="http://www.w3.org/1999/xhtml"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="dependencies" version="5.2">
<info>
  <title>Dependencies</title>
</info>

<para>XML Calabash runs on the JVM and requires Java version 11 or later. It is
implemented in Kotlin. It relies on the Kotlin runtime and on third party
libraries for some functionality. In particular it was built with:
</para>

<?dependencies xmlcalabash?>

<para>Broadly:</para>

<variablelist>
<varlistentry>
<term>Saxon <?dep net.sf.saxon:Saxon-HE?></term>
<listitem>
<para>XML Calabash 3.x is built on top of Saxon 12. There is no support for
earlier releases of Saxon. It will work with Saxon HE, but you will have to provide Saxon EE and
an appropriate license if you want to use licensed features (like XML Schema validation).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>brotliDec, version <?dep org.brotli:dec?></term>
<listitem>
<para>To support <literal>.br</literal> archive files.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>commonsCodec, version <?dep commons-codec:commons-codec?></term>
<listitem>
<para>For common encoders and decoders.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>commonsCompress, version <?dep org.apache.commons:commons-compress?></term>
<listitem>
<para>To support processing many flavors of archive files.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>flexmarkAll, version <?dep com.vladsch.flexmark:flexmark-all?></term>
<listitem>
<para>To support MarkDown to HTML conversion.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>htmlparser, version <?dep nu.validator:htmlparser?></term>
<listitem>
<para>To parse HTML.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>httpClient, version <?dep org.apache.httpcomponents.client5:httpclient5?></term>
<listitem>
<para>To support HTTP requests.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>jing, version <?dep org.relaxng:jing?></term>
<listitem>
<para>To support RELAX NG and NVDL validation.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>jsonSchemaValidator, version <?dep com.networknt:json-schema-validator?></term>
<listitem>
<para>To support JSON schema validation.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>SchXslt2, version <?dep name.dmaus.schxslt:schxslt2?></term>
<listitem>
<para>To support Schematron.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sinclude, version <?dep com.nwalsh:sinclude?></term>
<listitem>
<para>To support XInclude.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>slf4j, version <?dep org.slf4j:slf4j-api?></term>
<listitem>
<para>For logging.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>tukaaniXz, version <?dep org.tukaani:xz?></term>
<listitem>
<para>To support <literal>.xz</literal> archive files.
</para>
</listitem>
</varlistentry>
<!--
<varlistentry>
<term>xercesImpl, version <?dep ?></term>
<listitem>
<para>Where the Xerces XML parser is used.
</para>
</listitem>
</varlistentry>
-->
<varlistentry>
<term>uuidCreator, version <?dep com.github.f4b6a3:uuid-creator?></term>
<listitem>
<para>To support UUIDs.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>XML Resolver, version <?dep org.xmlresolver:xmlresolver?></term>
<listitem>
<para>For XML Catalog resolution.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>FasterXML data formats, version <?dep com.fasterxml.jackson.dataformat:jackson-dataformat-yaml?></term>
<listitem>
<para>For YAML and TOML support.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>javax.activation, version <?dep javax.activation:activation?></term>
<listitem>
<para>For MIME type support.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>JLine, version <?dep org.jline:jline-reader?></term>
<listitem>
<para>For the debugger command line.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>NineML, version <?dep org.nineml:coffeefilter?></term>
<listitem>
<para>For Invisible XML support (and parsing the debugger command line).
</para>
</listitem>
</varlistentry>
</variablelist>

<para>Some extension steps require additional dependencies. Those
dependencies are documented with the extension steps.</para>

<para>If your pipelines don’t use features supported by third party libraries
(for example, if you don’t have <literal>.br</literal> archives or convert
MarkDown documents), you can omit the dependencies.</para>

<para>In many cases, you can use different versions of these libraries. For
example, you can usually upgrade to more recent minor revisions. If the third
party API has changed in some incompatible way, your pipeline will fail.</para>

</chapter>
