<?xml version="1.0" encoding="utf-8"?>
<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:p="http://www.w3.org/ns/xproc"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xml:id="p-css-formatter">
<?db filename="p-css-formatter"?>
<info>
  <bibliomisc role="version">3.1</bibliomisc>
</info>
<refnamediv>
   <refname>p:css-formatter</refname>
   <refpurpose>The standard p:css-formatter step</refpurpose>
</refnamediv>
<refsynopsisdiv>

<refsection role="introduction">
<title>Introduction</title>
<para>The <tag>p:css-formatter</tag> step applies <biblioref linkend="CSS"/>
formatting to an XML or HTML document.
The output of this step is often, but not necessarily, a PDF document.</para>
</refsection>

<refsection role="step-declaration">
<title>Step declaration</title>
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../xmlcalabash/src/main/resources/com/xmlcalabash/library.xpl" xpointer="xpath(/*/*[@type='p:css-formatter'])"/>
</refsection>

<refsection role="errors"><title>Errors</title><para>
<error code="D0079">It is a <glossterm>dynamic error</glossterm> if a supplied content-type is not 
    a valid media type of the form 
    “<literal><replaceable>type</replaceable>/<replaceable>subtype</replaceable>+<replaceable>ext</replaceable></literal>” 
    or “<literal><replaceable>type</replaceable>/<replaceable>subtype</replaceable></literal>”.</error>
<error code="C0204">It is a <glossterm>dynamic error</glossterm> if the requested
content-type is not supported.</error>
<error code="C0166">It is a <glossterm>dynamic error</glossterm> if the requested document
cannot be produced.</error>
</para>
</refsection>

<refsection role="implementation-features"><title>Implementation-defined and -dependent features</title>
<para>
<impl>The use of media type
parameters on the <option>content-type</option> option is
<glossterm>implementation-defined</glossterm>.</impl>
<impl>If the <option>content-type</option> option is not
specified, the output type is
<glossterm>implementation-defined</glossterm>.</impl>
<impl>The precise way that the <tag>p:css-formatter</tag> step selects
stylesheets is <glossterm>implementation-defined</glossterm>.</impl>
<impl>A formatter may take any number of optional rendering
parameters via the step's <option>parameters</option>; such parameters
are defined by the CSS implementation used and are
<glossterm>implementation-defined</glossterm>.</impl>
<impl>The CSS level and the particular CSS features supported by
<tag>p:css-formatter</tag> are
<glossterm>implementation-defined</glossterm>.</impl>
</para>
</refsection>
</refsynopsisdiv>

<refsection>
<title>Description</title>

<para role="external-refs"/>

<para>XML Calabash supports several CSS formatter implementations.
There is also a service provider interface so that additional
implementations can be provided by third parties. Several <link
linkend="p-xsl-formatter">XSL formatters</link> are also
supported.</para>

<para>Processors can be selected in the configuration file
with the <tag>cc:paged-media</tag> element as described in the
<link xlink:href="../../userguide/current/configuration.html#cc.paged-media">User Guide</link>.</para>

<informaltable>
<tgroup cols="2">
<colspec colwidth="4*"/>
<colspec colwidth="1*"/>
<thead>
<row><entry>Configuration URI</entry><entry>Processor selected</entry></row>
</thead>
<tbody>
<row>
  <entry><uri>https://xmlcalabash.com/paged-media/css-formatter/antenna-house</uri></entry>
  <entry><link linkend="css-antennahouse">Antenna House</link></entry>
</row>
<row>
  <entry><uri>https://xmlcalabash.com/paged-media/css-formatter/prince</uri></entry>
  <entry><link linkend="css-princexml">Prince XML</link></entry>
</row>
<row>
  <entry><uri>https://xmlcalabash.com/paged-media/css-formatter/weasyprint</uri></entry>
  <entry><link linkend="css-weasyprint">Weasyprint</link></entry>
</row>
</tbody>
</tgroup>
</informaltable>

<important>
<para>You must also obtain and install the relevant processor, configure it on your
system, and satisfy its licensing requirements. XML Calabash doesn’t ship with the
processors themselves.</para>
</important>

<refsection xml:id="css-antennahouse">
<title>Antenna House</title>

<para>In order to use the Antenna House formatter, you must install and configure
<link xlink:href="https://www.antennahouse.com/formatter-v7">Antenna House Formatter</link>.</para>

<para>You can configure the formatter with
<link xlink:href="../../userguide/current/configuration.html#cc.paged-media">a
configuration property</link> or via the <option>parameters</option> option.
The following configuration options are supported:</para>

<informaltable>
<tgroup cols="2">
<colspec colwidth="2*"/>
<colspec colwidth="1*"/>
<thead>
<row><entry>Property name</entry><entry>Type</entry></row>
</thead>
<tbody>
<row><entry><literal>EmbedAllFontsEx</literal></entry><entry>string: “part”, “base14”, or “all”</entry></row>
<row><entry><literal>ExitLevel</literal></entry><entry>integer</entry></row>
<row><entry><literal>ImageCompression</literal></entry><entry>integer</entry></row>
<row><entry><literal>NoAccessibility</literal></entry><entry>boolean</entry></row>
<row><entry><literal>NoAddingOrChangingComments</literal></entry><entry>boolean</entry></row>
<row><entry><literal>NoAssembleDoc</literal></entry><entry>boolean</entry></row>
<row><entry><literal>NoChanging</literal></entry><entry>boolean</entry></row>
<row><entry><literal>NoContentCopying</literal></entry><entry>boolean</entry></row>
<row><entry><literal>NoFillForm</literal></entry><entry>boolean</entry></row>
<row><entry><literal>NoPrinting</literal></entry><entry>boolean</entry></row>
<row><entry><literal>OptionFileURI</literal></entry><entry>string</entry></row>
<row><entry><literal>OwnersPassword</literal></entry><entry>string</entry></row>
<row><entry><literal>TwoPassFormatting</literal></entry><entry>boolean</entry></row>
</tbody>
</tgroup>
</informaltable>

<para>For more information about these properties, consult the AH Formatter API documentation.</para>

<para>The following <option>content-type</option>s are supported:</para>

<informaltable>
<tgroup cols="2">
<colspec colwidth="2*"/>
<colspec colwidth="1*"/>
<thead>
<row><entry>Content type</entry><entry>AH output format</entry></row>
</thead>
<tbody>
<row><entry><literal>application/pdf</literal></entry><entry><literal>@PDF</literal></entry></row>
<row><entry><literal>application/postscript</literal></entry><entry><literal>@PS</literal></entry></row>
<row><entry><literal>application/vnd.inx</literal></entry><entry><literal>@INX</literal></entry></row>
<row><entry><literal>application/vnd.mif</literal></entry><entry><literal>@MIF</literal></entry></row>
<row><entry><literal>image/svg+xml</literal></entry><entry><literal>@SVG</literal></entry></row>
<row><entry><literal>text/plain</literal></entry><entry><literal>@TEXT</literal></entry></row>
</tbody>
</tgroup>
</informaltable>

</refsection>

<refsection xml:id="css-princexml">
<title>PrinceXML</title>

<para>In order to use the PrinceXML formatter, you must install and configure
<link xlink:href="https://www.princexml.com/">Prince</link>.</para>

<important>
<title>Backwards incompatible change</title>
<para>In beta7, XML Calabash switched to the Prince java wrapper
version <?dep com.princexml:prince-java-wrapper?>. This added many options,
changed the names of several options, and removed a few.
</para>
</important>

<para>You can configure the formatter with
<link xlink:href="../../userguide/current/configuration.html#cc.paged-media">a
configuration property</link> or via the <option>parameters</option> option.
The configuration options listed in the table below are supported.</para>

<note>
<para>The underlying Prince API has “negative options”, but
for consistency, all of the options on this step are <emphasis>positive</emphasis>.
(To disable parallel downloads, set <literal>parallelDownloads</literal> to
<literal>false</literal>, rather than setting <literal>noParallelDownloads</literal> to
<literal>true</literal>).</para>
</note>

<informaltable>
<tgroup cols="2">
<colspec colwidth="2*"/>
<colspec colwidth="3*"/>
<thead>
<row><entry>Property name</entry><entry>Type</entry></row>
</thead>
<tbody>
<row><entry><literal>allowAnnotate</literal></entry><entry>boolean</entry></row>
<row><entry><literal>allowAssembly</literal></entry><entry>boolean</entry></row>
<row><entry><literal>allowCopy</literal></entry><entry>boolean</entry></row>
<row><entry><literal>allowCopyForAccessibility</literal></entry><entry>boolean</entry></row>
<row><entry><literal>allowModify</literal></entry><entry>boolean</entry></row>
<row><entry><literal>allowPrint</literal></entry><entry>boolean</entry></row>
<row><entry><literal>artificialFonts</literal></entry><entry>boolean</entry></row>
<row><entry><literal>attachments</literal></entry><entry>list of string</entry></row>
<row><entry><literal>authMethods</literal></entry><entry>“<literal>basic</literal>”,
“<literal>digest</literal>”, “<literal>ntlm</literal>”, or “<literal>negotiate</literal>”</entry></row>
<row><entry><literal>authPassword</literal></entry><entry>string</entry></row>
<row><entry><literal>authPreemptive</literal></entry><entry>boolean</entry></row>
<row><entry><literal>authScheme</literal></entry><entry>“<literal>http</literal>” or
“<literal>https</literal>”</entry></row>
<row><entry><literal>authServer</literal></entry><entry>string</entry></row>
<row><entry><literal>authUser</literal></entry><entry>string</entry></row>
<row><entry><literal>authorStyle</literal></entry><entry>boolean</entry></row>
<row><entry><literal>baseURL</literal></entry><entry>string</entry></row>
<row><entry><literal>compress</literal></entry><entry>boolean</entry></row>
<row><entry><literal>convertColors</literal></entry><entry>boolean</entry></row>
<row><entry><literal>cookieJar</literal></entry><entry>string</entry></row>
<row><entry><literal>cookies</literal></entry><entry>list of string</entry></row>
<row><entry><literal>debug</literal></entry><entry>boolean</entry></row>
<row><entry><literal>defaultStyle</literal></entry><entry>boolean</entry></row>
<row><entry><literal>embedFonts</literal></entry><entry>boolean</entry></row>
<row><entry><literal>encrypt</literal></entry><entry>boolean</entry></row>
<row><entry><literal>exePath</literal></entry><entry>string</entry></row>
<row><entry><literal>failDroppedContent</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failInvalidLicense</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failMissingGlyphs</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failMissingResources</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failPdfProfileError</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failPdfTagError</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failSafe</literal></entry><entry>boolean</entry></row>
<row><entry><literal>failStrippedTransparency</literal></entry><entry>boolean</entry></row>
<row><entry><literal>fallbackCmykProfile</literal></entry><entry>string</entry></row>
<row><entry><literal>forceIdentityEncoding</literal></entry><entry>boolean</entry></row>
<row><entry><literal>httpProxy</literal></entry><entry>string</entry></row>
<row><entry><literal>httpTimeout</literal></entry><entry>string</entry></row>
<row><entry><literal>iframes</literal></entry><entry>boolean</entry></row>
<row><entry><literal>inputType</literal></entry><entry>“<literal>auto</literal>”,
“<literal>html</literal>”, or “<literal>xml</literal>”</entry></row>
<row><entry><literal>javascript</literal></entry><entry>boolean</entry></row>
<row><entry><literal>keyBits</literal></entry><entry>40 or 128</entry></row>
<row><entry><literal>licenseFile</literal></entry><entry>string</entry></row>
<row><entry><literal>licenseKey</literal></entry><entry>string</entry></row>
<row><entry><literal>log</literal></entry><entry>string</entry></row>
<row><entry><literal>maxPasses</literal></entry><entry>string</entry></row>
<row><entry><literal>media</literal></entry><entry>string</entry></row>
<row><entry><literal>network</literal></entry><entry>boolean</entry></row>
<row><entry><literal>objectStreams</literal></entry><entry>boolean</entry></row>
<row><entry><literal>ownerPassword</literal></entry><entry>string</entry></row>
<row><entry><literal>parallelDownloads</literal></entry><entry>boolean</entry></row>
<row><entry><literal>pdfAuthor</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfCreator</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfEventScripts</literal></entry><entry>list of string pairs</entry></row>
<row><entry><literal>pdfForms</literal></entry><entry>boolean</entry></row>
<row><entry><literal>pdfId</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfKeywords</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfLang</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfOutputIntent</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfProfile</literal></entry><entry>“<literal>PDF/A-1a</literal>”, 
“<literal>PDF/A-1a+PDF/UA-1</literal>”, 
“<literal>PDF/A-1b</literal>”, 
“<literal>PDF/A-2a</literal>”, 
“<literal>PDF/A-2a+PDF/UA-1</literal>”, 
“<literal>PDF/A-2b</literal>”, 
“<literal>PDF/A-3a</literal>”, 
“<literal>PDF/A-3a+PDF/UA-1</literal>”, 
“<literal>PDF/A-3b</literal>”, 
“<literal>PDF/UA-1</literal>”, 
“<literal>PDF/X-1a:2001</literal>”, 
“<literal>PDF/X-1a:2003</literal>”, 
“<literal>PDF/X-3:2002</literal>”, 
“<literal>PDF/X-3:2003</literal>”, or
“<literal>PDF/X-4</literal>”.
</entry></row>
<row><entry><literal>pdfScript</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfSubject</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfTitle</literal></entry><entry>string</entry></row>
<row><entry><literal>redirects</literal></entry><entry>boolean</entry></row>
<row><entry><literal>scripts</literal></entry><entry>string</entry></row>
<row><entry><literal>sslCaCert</literal></entry><entry>string</entry></row>
<row><entry><literal>sslCaPath</literal></entry><entry>string</entry></row>
<row><entry><literal>sslCert</literal></entry><entry>string</entry></row>
<row><entry><literal>sslCertType</literal></entry><entry>“<literal>pem</literal>”
or “<literal>der</literal>”</entry></row>
<row><entry><literal>sslKey</literal></entry><entry>string</entry></row>
<row><entry><literal>sslKeyPassword</literal></entry><entry>string</entry></row>
<row><entry><literal>sslKeyType</literal></entry><entry>“<literal>pem</literal>”
or “<literal>der</literal>”</entry></row>
<row><entry><literal>sslVerification</literal></entry><entry>“<literal>default</literal>”,
“<literal>tlsv1</literal>”, “<literal>tlsv1.0</literal>”, “<literal>tlsv1.1</literal>”,
“<literal>tlsv1.2</literal>”, or “<literal>tlsv1.3</literal>”</entry></row>
<row><entry><literal>sslVersion</literal></entry><entry>string</entry></row>
<row><entry><literal>subsetFonts</literal></entry><entry>boolean</entry></row>
<row><entry><literal>taggedPdf</literal></entry><entry>boolean</entry></row>
<row><entry><literal>userPassword</literal></entry><entry>string</entry></row>
<row><entry><literal>verbose</literal></entry><entry>boolean</entry></row>
<row><entry><literal>warnCssUnknown</literal></entry><entry>boolean</entry></row>
<row><entry><literal>warnCssUnsupported</literal></entry><entry>boolean</entry></row>
<row><entry><literal>xinclude</literal></entry><entry>boolean</entry></row>
<row><entry><literal>xmlExternalEntities</literal></entry><entry>boolean</entry></row>
<row><entry><literal>xmp</literal></entry><entry>string</entry></row>
</tbody>
</tgroup>
</informaltable>

<para>Properties with the type “list of string” means a single string with
space separated values.</para>

<para>The <literal>pdfEventScripts</literal> property is also a single string
with space separated values. After splitting the string, it must consist of a sequence of
pairs where the first item is the event type
(“<literal>will-close</literal>”,
“<literal>will-save</literal>”,
“<literal>did-save</literal>”,
“<literal>will-print</literal>”,
“<literal>did-print</literal>”) and the second item is the script filename.</para>

<para>(This business of using single strings and splitting them on white space is
a bit of a mess. It’s motivated in part by the fact that the default values for the
properties come from attribute values in the configuration file. If it’s problematic,
please open an issue.)</para>

<para>The <literal>exePath</literal> property is used to locate the
<literal>prince</literal> executable. If it’s not specified, XML Calabash will
first look for the system property
<literal>com.xmlcalabash.css.prince.exepath</literal>, and if that doesn’t
exist, it will search the user’s <envar>PATH</envar> environment
variable.</para>

<para>For more information about the properties, consult the Prince API documentation.</para>

</refsection>

<refsection xml:id="css-weasyprint">
<title>Weasyprint</title>

<para>In order to use the Weasyprint formatter, you must install and configure
<link xlink:href="https://weasyprint.org/">WeasyPrint</link>.</para>

<para>You can configure the formatter with
<link xlink:href="../../userguide/current/configuration.html#cc.paged-media">a
configuration property</link> or via the <option>parameters</option> option.
The following configuration options are supported:</para>

<informaltable>
<tgroup cols="2">
<colspec colwidth="2*"/>
<colspec colwidth="1*"/>
<thead>
<row><entry>Property name</entry><entry>Type</entry></row>
</thead>
<tbody>
<row><entry><literal>exePath</literal></entry><entry>string</entry></row>
<row><entry><literal>mediaType</literal></entry><entry>string</entry></row>
<row><entry><literal>baseUrl</literal></entry><entry>string</entry></row>
<row><entry><literal>attachment</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfIdentifier</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfVariant</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfVersion</literal></entry><entry>string</entry></row>
<row><entry><literal>pdfForms</literal></entry><entry>boolean</entry></row>
<row><entry><literal>uncompressedPdf</literal></entry><entry>boolean</entry></row>
<row><entry><literal>customMetadata</literal></entry><entry>boolean</entry></row>
<row><entry><literal>presentationalHints</literal></entry><entry>boolean</entry></row>
<row><entry><literal>optimizeImages</literal></entry><entry>boolean</entry></row>
<row><entry><literal>jpegQuality</literal></entry><entry>string</entry></row>
<row><entry><literal>fullFonts</literal></entry><entry>boolean</entry></row>
<row><entry><literal>hinting</literal></entry><entry>boolean</entry></row>
<row><entry><literal>cacheFolder</literal></entry><entry>string</entry></row>
<row><entry><literal>dpi</literal></entry><entry>string</entry></row>
<row><entry><literal>verbose</literal></entry><entry>boolean</entry></row>
<row><entry><literal>debug</literal></entry><entry>boolean</entry></row>
<row><entry><literal>quiet</literal></entry><entry>boolean</entry></row>
<row><entry><literal>timeout</literal></entry><entry>string</entry></row>
</tbody>
</tgroup>
</informaltable>

<para>The <literal>exePath</literal> property is used to locate the
<literal>weasyprint</literal> executable. If it’s not specified, XML Calabash will
first look for the system property
<literal>com.xmlcalabash.css.weasyprint.exepath</literal>, and if that doesn’t
exist, it will search the user’s <envar>PATH</envar> environment
variable.</para>

<para>For more information about the properties, consult the WeasyPrint documentation.</para>

</refsection>
</refsection>
</refentry>
