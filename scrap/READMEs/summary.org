compoundStep: name (…)
  p:with-input* & p:output*, subpipeline

atomicStep: name (…)
  p:with-input* & p:with-option*

BindingDeclaration
  href? = { anyURI }
  pipe? = string
    ((p:empty | 
       (p:document | 
        p:pipe | 
        p:inline)*) | 
     anyElement*)

PortDeclaration: BindingDeclaration
  port? = NCName
  sequence? = boolean
  primary? = boolean
  select? = XPathExpression
  content-types? = ContentTypes

InputPortDeclaration: PortDeclaration
OutputPortDeclaration: PortDeclaration
  
<p:input: InputPortDeclaration
<p:output: OutputPortDeclaration
  serialization? = map(xs:QName,item()*)>
<p:with-input: InputPortDeclaration
<p:with-output: OutputPortDeclaration

===========

VariableDeclaration: BindingDeclaration
  name = EQName
  as? = XPathSequenceType
  select = XPathExpression
  collection? = boolean

<p:variable: VariableDeclaration
<p:option: VariableDeclaration
  values? = string
  static? = boolean
  required? = boolean
  visibility? = private|public />

<p:with-option: VariableDeclaration

StepContainerInterface
  psvi-required? = boolean
  xpath-version? = decimal
  version? = 3.0
  importedSteps: List<StepContainerDeclaration>
  importedFunctions: List<>

StepInterface
  name = NCName
  inputs()
  outputs()
  primaryInput()
  primaryOutput()
  namedInput(port: String)
  namedOutput(port: String)
  options()
  namedOption(name: QName)

CompoundStepInterface: StepInterface
  subpipeline()

<p:declare-step: CompoundStepInterface, StepContainerInterface
  type? = EQName
  visibility? = private|public>

<p:library: StepContainerInterface

<p:import
  href = anyURI />

<p:import-functions
  href = anyURI
  content-type? = ContentType
  namespace? = string />

<p:pipe
  step? = NCName
  port? = NCName />

<p:inline
  exclude-inline-prefixes? = ExcludeInlinePrefixes
  content-type? = string
  document-properties? = map(xs:QName,item()*)
  encoding? = string>
    anyNode*
</p:inline>

<p:document
  href = { anyURI }
  content-type? = string
  document-properties? = map(xs:QName,item()*)
  parameters? = map(xs:QName,item()*) />

<p:empty />

